% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/09_plot_utils.R
\name{scatter_lm_marginal}
\alias{scatter_lm_marginal}
\title{Scatter Plot with Marginal Density/Histogram and Regression Equation (Enhanced Version)}
\usage{
scatter_lm_marginal(
  data,
  x,
  y,
  digits = 3,
  label.x = NULL,
  label.y = NULL,
  color = NULL,
  marginal = c("histogram", "density", "boxplot"),
  bins = 15,
  margin_fill = "grey60",
  margin_color = "white",
  ...
)
}
\arguments{
\item{data}{Data frame, must contain x, y and optional color grouping variable}

\item{x, y}{Character scalars, variable names}

\item{digits}{Decimal places for equation/statistics, default 3 (controlled by stat_poly_eq)}

\item{label.x, label.y}{Deprecated, kept for backward compatibility}

\item{color}{Character scalar, grouping variable name; NULL for no grouping}

\item{marginal}{Marginal plot type, fixed as "densigram"}

\item{bins}{Number of histogram bins, passed to ggExtra::ggMarginal}

\item{margin_fill, margin_color}{Fill color and border color for marginal plots}

\item{...}{Additional aesthetic parameters passed to geom_point()}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{    ggplot object (with marginal layers), can be further customized with + or saved
}\if{html}{\out{</div>}}
}
\description{
Main plot: scatter points + linear regression line + automatic annotation of equation, R^2, p value (ggpmisc::stat_poly_eq).
Marginal plots: bilateral densigram (density + histogram mix), supports grouping colors.
Color logic: uniform color when no color grouping; automatic coloring by group variable with hidden legend when color specified.
}
\details{
\itemize{
\item Uses ggpmisc::stat_poly_line() + stat_poly_eq() to automatically add regression line and equation
\item Marginal plots are densigram (density + histogram), supports group colors/fill
\item Uniform color \verb{#479E88} when no grouping; uses scale_color_npg() with hidden legend when grouping
\item Returned object already includes marginal layers, can be directly saved with ggsave()
}
}
\examples{
\dontrun{
p <- scatter_lm_marginal(mtcars, "wt", "mpg", color = "cyl", bins = 20)
print(p)
ggsave("scatter_marginal.png", p, width = 6, height = 5)
}

}
